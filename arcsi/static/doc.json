{
  "openapi": "3.0.0",
  "info": {
    "description": "Arcsi API doc",
    "version": "0.9.5",
    "title": "Arcsi",
    "contact": {
      "email": "it@lahmacun.hu"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "servers": [
    {
      "url": "/arcsi/"
    }
  ],
  "tags": [
    {
      "name": "User Request",
      "description": "API for requesting and return User details"
    },
    {
      "name": "Show Request",
      "description": "API for requesting and return Show details"
    },
    {
      "name": "Item Request",
      "description": "API for requesting and return Item details"
    }
  ],
  "paths": {
    "/users/all": {
      "get": {
        "tags": [
          "User Request"
        ],
        "summary": "Return all User",
        "produces": [
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/html": {
                "schema": {
                  "$ref": "component.json#/components/schemas/UserRequests"
                }
              }
            }
          }
        }
      }
    },
    "/user/{id}": {
      "get": {
        "tags": [
          "User Request"
        ],
        "summary": "Get User with given ID",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "ID of the user that we want to match",
            "schema": {
              "$ref": "component.json#/components/schemas/id"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "component.json#/components/schemas/UserRequest"
                }
              }
            }
          },
          "404": {
            "description": "Could not find user"
          }
        }
      }
    },
    "/shows/all": {
      "get": {
        "tags": [
          "Show Request"
        ],
        "summary": "Return Shows for Home and Schedule Page",
        "produces": [
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/html": {
                "schema": {
                  "$ref": "component.json#/components/schemas/ShowScheduleRequests"
                }
              }
            }
          }
        }
      }
    },
    "/shows/archive": {
      "get": {
        "tags": [
          "Show Request"
        ],
        "summary": "Return Shows for Shows Page",
        "produces": [
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/html": {
                "schema": {
                  "$ref": "component.json#/components/schemas/ShowArchiveRequests"
                }
              }
            }
          }
        }
      }
    },
    "/show/{show_slug}/archive": {
      "get": {
        "tags": [
          "Show Request"
        ],
        "summary": "Return Show for Show Subpage",
        "parameters": [
          {
            "in": "path",
            "name": "show_slug",
            "required": true,
            "description": "Show.archive_lahmastore_base_url",
            "type": "string"
          }
        ],
        "produces": [
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/html": {
                "schema": {
                  "$ref": "component.json#/components/schemas/ShowRequest"
                }
              }
            }
          },
          "404": {
            "description": "Show not found"
          }
        }
      }
    },
    "/show/{show_slug}/episode/{episode_slug}": {
      "get": {
        "tags": [
          "Item Request"
        ],
        "summary": "Return Episode for Episode Subpage",
        "parameters": [
          {
            "in": "path",
            "name": "show_slug",
            "required": true,
            "description": "Show.archive_lahmastore_base_url",
            "type": "string"
          },
          {
            "in": "path",
            "name": "episode_slug",
            "required": true,
            "description": "Item.play_file_name + '.mp3'",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "component.json#/components/schemas/ItemRequest"
                }
              }
            }
          },
          "404": {
            "description": "Episode not found"
          }
        }
      }
    },
    "/item/all": {
      "get": {
        "tags": [
          "Item Request"
        ],
        "summary": "Return Episodes for Archive Page",
        "produces": [
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/html": {
                "schema": {
                  "$ref": "component.json#/components/schemas/ItemRequests"
                }
              }
            }
          }
        }
      }
    },
    "/item/{id}": {
      "get": {
        "tags": [
          "Item Request"
        ],
        "summary": "Get Item with given ID",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Item Request ID",
            "schema": {
              "$ref": "component.json#/components/schemas/id"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "component.json#/components/schemas/ItemRequest"
                }
              }
            }
          },
          "404": {
            "description": "Item not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Item Request"
        ],
        "summary": "Delete Item with given ID",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Item Request ID",
            "schema": {
              "$ref": "component.json#/components/schemas/id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "URL not found"
          }
        }
      }
    },
    "/item/{id}/listen": {
      "get": {
        "tags": [
          "Item Request"
        ],
        "summary": "Listen Item with given ID",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Item Request ID",
            "schema": {
              "$ref": "component.json#/components/schemas/id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/mp3": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/item/{id}/download": {
      "get": {
        "tags": [
          "Item Request"
        ],
        "summary": "Download Item with given ID",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Item Request ID",
            "schema": {
              "$ref": "component.json#/components/schemas/id"
            }
          }
        ],
        "responses": {
          "302": {
            "description": "OK"
          },
          "404": {
            "description": "Failed. Item not found."
          }
        }
      }
    }
  }
}